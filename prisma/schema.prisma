// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                 Int                  @id @default(autoincrement())
    email              String               @unique
    name               String?
    password           String
    organization       Organization[]
    isEmailVerified    Boolean              @default(false)
    role               Role                 @default(User)
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt
    active             Boolean              @default(false)
    OrganizationAccess OrganizationAccess[]
    Otp                Otp[]

    @@index([email], type: Hash)
}

model Organization {
    id                 Int                  @id @default(autoincrement())
    name               String
    User               User?                @relation(fields: [userId], references: [id])
    userId             Int?
    slug               String
    type               BusinessType         @relation(fields: [businessTypeId], references: [id])
    description        String?
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt
    OrganizationAccess OrganizationAccess[]
    businessTypeId     Int

    @@index([slug], type: Hash)
}

model OrganizationAccess {
    id             Int              @id @default(autoincrement())
    user           User             @relation(fields: [userId], references: [id])
    userId         Int
    organization   Organization     @relation(fields: [organizationId], references: [id])
    organizationId Int
    role           OrganizationRole
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
    active         Boolean          @default(false)
}

model Otp {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    otp       String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model BusinessType {
    id             Int            @id @default(autoincrement())
    name           String
    description    String
    examples       String[]
    targetAudience String[]
    Organization   Organization[]
}

// Enums declaration
enum OrganizationRole {
    Owner
    Admin
    employee
}

enum Role {
    User
    Admin
    SuperAdmin
}
