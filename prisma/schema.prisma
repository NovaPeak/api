// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                 Int                  @id @default(autoincrement())
    email              String               @unique
    name               String?
    password           String
    organization       Organization[]
    isEmailVerified    Boolean              @default(false)
    role               Role                 @default(User)
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt
    active             Boolean              @default(false)
    OrganizationAccess OrganizationAccess[]
    Otp                Otp[]

    @@index([email], type: Hash)
}

model Organization {
    id                   Int                    @id @default(autoincrement())
    name                 String
    User                 User?                  @relation(fields: [userId], references: [id])
    userId               Int?
    slug                 String
    type                 BusinessType           @relation(fields: [businessTypeId], references: [id])
    description          String?
    createdAt            DateTime               @default(now())
    updatedAt            DateTime               @updatedAt
    OrganizationAccess   OrganizationAccess[]
    businessTypeId       Int
    Customer             Customer[]
    Product              Product[]
    InventoryTransaction InventoryTransaction[]
    Feedback             Feedback[]

    @@index([slug], type: Hash)
}

model OrganizationAccess {
    id             Int              @id @default(autoincrement())
    user           User             @relation(fields: [userId], references: [id])
    userId         Int
    organization   Organization     @relation(fields: [organizationId], references: [id])
    organizationId Int
    role           OrganizationRole
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
    active         Boolean          @default(true)
}

model Otp {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    otp       String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model BusinessType {
    id             Int            @id @default(autoincrement())
    name           String
    description    String
    examples       String[]
    targetAudience String[]
    Organization   Organization[]
}

model Customer {
    id             Int          @id @default(autoincrement())
    name           String
    email          String?      @unique
    mobileNumber   String?
    organization   Organization @relation(fields: [organizationId], references: [id])
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt
    organizationId Int
    Feedback       Feedback[]

    @@index([email], type: Hash)
}

model Product {
    id                   Int                    @id @default(autoincrement())
    name                 String
    description          String?
    price                Float
    quantity             Int                    @default(0)
    organization         Organization           @relation(fields: [organizationId], references: [id])
    organizationId       Int
    createdAt            DateTime               @default(now())
    updatedAt            DateTime               @updatedAt
    InventoryTransaction InventoryTransaction[]
}

model InventoryTransaction {
    id              Int             @id @default(autoincrement())
    product         Product         @relation(fields: [productId], references: [id])
    productId       Int
    organization    Organization    @relation(fields: [organizationId], references: [id])
    organizationId  Int
    quantity        Int
    transactionType TransactionType
    createdAt       DateTime        @default(now())
}

model Feedback {
    id             Int          @id @default(autoincrement())
    customer       Customer     @relation(fields: [customerId], references: [id])
    customerId     Int
    organization   Organization @relation(fields: [organizationId], references: [id])
    organizationId Int
    feedbackType   FeedbackType
    feedbackText   String
    rating         Int
    createdAt      DateTime     @default(now())
}

enum FeedbackType {
    Product
    Service
    Overall
}

enum TransactionType {
    IN
    OUT
}

// Enums declaration
enum OrganizationRole {
    Owner
    Admin
    employee
}

enum Role {
    User
    Admin
    SuperAdmin
}
